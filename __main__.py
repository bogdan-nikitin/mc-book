import functoolsimport json# for debuggingINPUT = '''Now principles discovered off increasing how reasonably middletons men. Add seems out man met plate court sense. His joy she worth truth given. All year feet led view went sake. You agreeable breakfast his set perceived immediate. Stimulated man are projecting favourable middletons can cultivated. Tolerably earnestly middleton extremely distrusts she boy now not. Add and offered prepare how cordial two promise. Greatly who affixed suppose but enquire compact prepare all put. Added forth chief trees but rooms think may. Wicket do manner others seemed enable rather in. Excellent own discovery unfeeling sweetness questions the gentleman. Chapter shyness matters mr parlors if mention thought. Kindness to he horrible reserved ye. Effect twenty indeed beyond for not had county. The use him without greatly can private. Increasing it unpleasant no of contrasted no continuing. Nothing colonel my no removed in weather. It dissimilar in up devonshire inhabiting. He difficult contented we determine ourselves me am earnestly. Hour no find it park. Eat welcomed any husbands moderate. Led was misery played waited almost cousin living. Of intention contained is by middleton am. Principles fat stimulated uncommonly considered set especially prosperous. Sons at park mr meet as fact like. Too cultivated use solicitude frequently. Dashwood likewise up consider continue entrance ladyship oh. Wrong guest given purse power is no. Friendship to connection an am considered difficulty. Country met pursuit lasting moments why calling certain the. Middletons boisterous our way understood law. Among state cease how and sight since shall. Material did pleasure breeding our humanity she contempt had. So ye really mutual no cousin piqued summer result. However venture pursuit he am mr cordial. Forming musical am hearing studied be luckily. Ourselves for determine attending how led gentleman sincerity. Valley afford uneasy joy she thrown though bed set. In me forming general prudent on country carried. Behaved an or suppose justice. Seemed whence how son rather easily and change missed. Off apartments invitation are unpleasant solicitude fat motionless interested. Hardly suffer wisdom wishes valley as an. As friendship advantages resolution it alteration stimulated he or increasing. Inhabiting discretion the her dispatched decisively boisterous joy. So form were wish open is able of mile of. Waiting express if prevent it we an musical. Especially reasonable travelling she son. Resources resembled forfeited no to zealously. Has procured daughter how friendly followed repeated who surprise. Great asked oh under on voice downs. Law together prospect kindness securing six. Learning why get hastened smallest cheerful. Death there mirth way the noisy merit. Piqued shy spring nor six though mutual living ask extent. Replying of dashwood advanced ladyship smallest disposal or. Attempt offices own improve now see. Called person are around county talked her esteem. Those fully these way nay thing seems. Any delicate you how kindness horrible outlived servants. You high bed wish help call draw side. Girl quit if case mr sing as no have. At none neat am do over will. Agreeable promotion eagerness as we resources household to distrusts. Polite do object at passed it is. Small for ask shade water manor think men begin. Unpleasant nor diminution excellence apartments imprudence the met new. Draw part them he an to he roof only. Music leave say doors him. Tore bred form if sigh case as do. Staying he no looking if do opinion. Sentiments way understood end partiality and his. '''SYMBOLS_SIZE = {    # Uppercase    'A': 5,    'B': 5,    'C': 5,    'D': 5,    'E': 5,    'F': 5,    'G': 5,    'H': 5,    'I': 3,    'J': 5,    'K': 5,    'L': 5,    'M': 5,    'N': 5,    'O': 5,    'P': 5,    'Q': 5,    'R': 5,    'S': 5,    'T': 5,    'U': 5,    'V': 5,    'W': 5,    'X': 5,    'Y': 5,    'Z': 5,    # Lowercase    'a': 5,    'b': 5,    'c': 5,    'd': 5,    'e': 5,    'f': 4,    'g': 5,    'h': 5,    'i': 1,    'j': 5,    'k': 4,    'l': 2,    'm': 5,    'n': 5,    'o': 5,    'p': 5,    'q': 5,    'r': 5,    's': 5,    't': 3,    'u': 5,    'v': 5,    'w': 5,    'x': 5,    'y': 5,    'z': 5,    # Symbols    ' ': 3,    '.': 1,    ',': 1,    # 'ยง': 0,}# value in pixelsMAX_LINE_LEN = 114TRAILING_SPACE_MAX_LINE_LEN = 118MAX_LINES = 14def get_char_len(char):    return SYMBOLS_SIZE[char] + 1def get_word_len(word):    return sum(map(get_char_len, word))def split_spaces_and_newlines(text):    parts = []    last_word = ''    for char in text:        if char == ' ' or char == '\n':            if last_word:                parts += [last_word]            last_word = ''            parts += [char]        else:            last_word += char    if last_word:        parts += [last_word]    return partsdef join_parts(parts):    return functools.reduce(lambda cur, part: cur + part, parts, '')def split_big_word_and_get_last_len(word):    parts = ['']    last_part_len = 0    for char in word:        char_len = get_char_len(char)        if last_part_len + char_len > MAX_LINE_LEN:            parts += ['']            last_part_len = 0        parts[-1] += char        last_part_len += char_len    return parts, last_part_lendef split_on_pages(text):    pages = [[]]    line_len = 0    lines_count = 1    words = split_spaces_and_newlines(text)    for word in words:        if word == '\n':            # a newline can be inserted even if the lines count is maximum            pages[-1] += ['\n']            lines_count += 1            if lines_count > MAX_LINES:                pages += [[]]                lines_count = 1            line_len = 0        else:            word_len = get_word_len(word)            if word_len > MAX_LINE_LEN:                word_parts, last_part_len = split_big_word_and_get_last_len(                    word                )                for part in word_parts:                    lines_count += 1                    if lines_count > MAX_LINES:                        pages += [[]]                        lines_count = 1                    pages[-1] += [part]                line_len = last_part_len            else:                if word == ' ':                    max_line_len = TRAILING_SPACE_MAX_LINE_LEN                else:                    max_line_len = MAX_LINE_LEN                if line_len + word_len > max_line_len:                    line_len = word_len                    lines_count += 1                    if lines_count > MAX_LINES:                        pages += [[]]                        lines_count = 1                else:                    line_len += word_len                pages[-1] += [word]    return list(map(join_parts, pages))def generate_give(text, title, author):    """    Generates book give command with specified text, title and author    """    pages = split_on_pages(text)    pages_json = [json.dumps({'text': page}) for page in pages]    return (f'/give @p written_book{{'            f'pages:{pages_json},title:{repr(title)},author:{repr(author)}}}')# def generate_give_writable(text):#     pages = split_on_pages(text)#     pages = [json.dumps(page).strip('"') for page in pages]#     return f'/give @p writable_book{{pages:{json.dumps(pages)}}}'def main():    # split_on_pages('\n  a')    # split_on_pages('iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii  abc')    # split_on_pages('iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii   ')    # split_on_pages('''iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii   a''')    # split_on_pages('abcd abcdefghijklmnopqrsthuvwxyz aboba')#     split_on_pages('''a# a# a# a# a# a# a# a# a# a# a# a# a# a# b''')    print(generate_give('abc', '', ''))    # split_on_pages(INPUT)if __name__ == '__main__':    main()